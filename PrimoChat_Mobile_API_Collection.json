{
  "info": {
    "name": "PrimoChat Mobile API Collection",
    "description": "Complete API collection for PrimoChat mobile application using tested admin APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "https://primoochat.vercel.app/api",
      "type": "string"
    },
    {
      "key": "access_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "socket_url",
      "value": "https://primoochat.vercel.app",
      "type": "string"
    },
    {
      "key": "festive_board_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "category_id",
      "value": "",
      "type": "string"
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{access_token}}",
        "type": "string"
      }
    ]
  },
  "item": [
    {
      "name": "Real-time Communication",
      "description": "Socket.IO endpoints for real-time notifications and chat",
      "item": [
        {
          "name": "Socket.IO Connection",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{socket_url}}",
              "host": ["{{socket_url}}"]
            }
          },
          "response": []
        },
        {
          "name": "Join User Room",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"event\": \"join-user\",\n  \"data\": \"{{user_id}}\"\n}"
            },
            "url": {
              "raw": "{{socket_url}}",
              "host": ["{{socket_url}}"]
            },
            "description": "Emit this event when user logs in to receive personalized notifications.\n\n**Event:** join-user\n**Data:** User ID (string)\n\n**Example:**\n```javascript\nsocket.emit('join-user', userId);\n```"
          },
          "response": []
        },
        {
          "name": "Join Chat Room",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"event\": \"join-chat\",\n  \"data\": \"{{chat_room_id}}\"\n}"
            },
            "url": {
              "raw": "{{socket_url}}",
              "host": ["{{socket_url}}"]
            },
            "description": "Emit this event to join a specific chat room for real-time messages.\n\n**Event:** join-chat\n**Data:** Chat Room ID (string)\n\n**Example:**\n```javascript\nsocket.emit('join-chat', chatRoomId);\n```"
          },
          "response": []
        },
        {
          "name": "Leave Chat Room",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"event\": \"leave-chat\",\n  \"data\": \"{{chat_room_id}}\"\n}"
            },
            "url": {
              "raw": "{{socket_url}}",
              "host": ["{{socket_url}}"]
            },
            "description": "Emit this event to leave a chat room.\n\n**Event:** leave-chat\n**Data:** Chat Room ID (string)\n\n**Example:**\n```javascript\nsocket.emit('leave-chat', chatRoomId);\n```"
          },
          "response": []
        },
        {
          "name": "Listen: New Notification",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{socket_url}}",
              "host": ["{{socket_url}}"]
            },
            "description": "Listen for real-time notifications.\n\n**Event:** new-notification\n**Data Structure:**\n```json\n{\n  \"id\": \"string\",\n  \"title\": \"string\",\n  \"message\": \"string\",\n  \"type\": \"CHAT_MESSAGE | MEAL_SELECTION | TRESTLE_BOARD_ADDED | USER_JOINED\",\n  \"isRead\": false,\n  \"createdAt\": \"2024-01-01T00:00:00.000Z\",\n  \"relatedId\": \"string\",\n  \"relatedType\": \"string\",\n  \"metadata\": {}\n}\n```\n\n**Example:**\n```javascript\nsocket.on('new-notification', (notification) => {\n  console.log('New notification:', notification);\n  // Handle notification in mobile app\n});\n```"
          },
          "response": []
        },
        {
          "name": "Listen: New Chat Message",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{socket_url}}",
              "host": ["{{socket_url}}"]
            },
            "description": "Listen for real-time chat messages.\n\n**Event:** new-message\n**Data Structure:**\n```json\n{\n  \"chatRoomId\": \"string\",\n  \"message\": {\n    \"id\": \"string\",\n    \"content\": \"string\",\n    \"senderId\": \"string\",\n    \"sender\": {\n      \"firstName\": \"string\",\n      \"lastName\": \"string\",\n      \"email\": \"string\"\n    },\n    \"createdAt\": \"2024-01-01T00:00:00.000Z\"\n  }\n}\n```\n\n**Example:**\n```javascript\nsocket.on('new-message', (data) => {\n  console.log('New message in chat:', data.chatRoomId);\n  // Update chat UI with new message\n});\n```"
          },
          "response": []
        },
        {
          "name": "Listen: Meal Selection",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{socket_url}}",
              "host": ["{{socket_url}}"]
            },
            "description": "Listen for meal selection updates.\n\n**Event:** meal-selection\n**Data Structure:**\n```json\n{\n  \"festiveBoardId\": \"string\",\n  \"festiveBoardTitle\": \"string\",\n  \"mealData\": {}\n}\n```\n\n**Example:**\n```javascript\nsocket.on('meal-selection', (data) => {\n  console.log('New meal selection:', data);\n  // Update meal selection UI\n});\n```"
          },
          "response": []
        },
        {
          "name": "Listen: Trestle Board Added",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{socket_url}}",
              "host": ["{{socket_url}}"]
            },
            "description": "Listen for new trestle board events.\n\n**Event:** trestle-board-added\n**Data Structure:**\n```json\n{\n  \"id\": \"string\",\n  \"title\": \"string\",\n  \"description\": \"string\",\n  \"date\": \"2024-01-01T00:00:00.000Z\"\n}\n```\n\n**Example:**\n```javascript\nsocket.on('trestle-board-added', (data) => {\n  console.log('New trestle board:', data);\n  // Update calendar/events UI\n});\n```"
          },
          "response": []
        },
        {
          "name": "Listen: User Created",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{socket_url}}",
              "host": ["{{socket_url}}"]
            },
            "description": "Listen for new user creation events.\n\n**Event:** user-created\n**Data Structure:**\n```json\n{\n  \"userId\": \"string\",\n  \"firstName\": \"string\",\n  \"lastName\": \"string\",\n  \"email\": \"string\"\n}\n```\n\n**Example:**\n```javascript\nsocket.on('user-created', (data) => {\n  console.log('New user created:', data);\n  // Update user list or show notification\n});\n```"
          },
          "response": []
        },
        {
          "name": "Mobile Implementation Guide",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{socket_url}}",
              "host": ["{{socket_url}}"]
            },
            "description": "**Complete Mobile Implementation Guide**\n\n**1. Install Dependencies:**\n```bash\nnpm install socket.io-client\n```\n\n**2. Basic Setup:**\n```javascript\nimport io from 'socket.io-client';\n\nconst socket = io('{{socket_url}}', {\n  transports: ['websocket', 'polling'],\n  autoConnect: true,\n  reconnection: true,\n});\n```\n\n**3. Join User Room:**\n```javascript\n// When user logs in\nsocket.emit('join-user', userId);\n```\n\n**4. Listen for Events:**\n```javascript\n// Notifications\nsocket.on('new-notification', (notification) => {\n  // Show notification in mobile app\n});\n\n// Chat messages\nsocket.on('new-message', (data) => {\n  // Update chat UI\n});\n\n// Join chat rooms\nsocket.emit('join-chat', chatRoomId);\n```\n\n**5. Error Handling:**\n```javascript\nsocket.on('connect_error', (error) => {\n  console.error('Connection error:', error);\n});\n\nsocket.on('disconnect', () => {\n  console.log('Disconnected from server');\n});\n```\n\n**That's it! Your mobile app will now receive real-time updates.**"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"user@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            }
          },
          "response": []
        },
        {
          "name": "Get User Details",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/auth/me",
              "host": ["{{base_url}}"],
              "path": ["auth", "me"]
            }
          },
          "response": []
        },
        {
          "name": "Change Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"currentPassword\": \"oldpassword123\",\n  \"newPassword\": \"newpassword123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/users/change-password",
              "host": ["{{base_url}}"],
              "path": ["users", "change-password"]
            }
          },
          "response": []
        },
        {
          "name": "Forgot Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"user@example.com\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/forgot-password",
              "host": ["{{base_url}}"],
              "path": ["auth", "forgot-password"]
            }
          },
          "description": "Request a password reset email. The system will send a beautiful HTML email with a reset link that expires in 1 hour.",
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"user@example.com\"\n}"
                },
                "url": {
                  "raw": "{{base_url}}/auth/forgot-password",
                  "host": ["{{base_url}}"],
                  "path": ["auth", "forgot-password"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"message\": \"If an account with that email exists, a password reset link has been sent.\"\n}"
            }
          ]
        },
        {
          "name": "Validate Reset Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/validate-reset-token",
              "host": ["{{base_url}}"],
              "path": ["auth", "validate-reset-token"]
            }
          },
          "description": "Validate a password reset token before allowing the user to reset their password. This endpoint checks if the token is valid and not expired.",
          "response": [
            {
              "name": "Valid Token Response",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\"\n}"
                },
                "url": {
                  "raw": "{{base_url}}/auth/validate-reset-token",
                  "host": ["{{base_url}}"],
                  "path": ["auth", "validate-reset-token"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"message\": \"Token is valid\",\n  \"userId\": \"507f1f77bcf86cd799439011\"\n}"
            }
          ]
        },
        {
          "name": "Reset Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n  \"password\": \"newpassword123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/reset-password",
              "host": ["{{base_url}}"],
              "path": ["auth", "reset-password"]
            }
          },
          "description": "Reset a user's password using a valid reset token. The password must be at least 6 characters long. After successful reset, the token is invalidated.",
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n  \"password\": \"newpassword123\"\n}"
                },
                "url": {
                  "raw": "{{base_url}}/auth/reset-password",
                  "host": ["{{base_url}}"],
                  "path": ["auth", "reset-password"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Password reset successfully\"\n}"
            }
          ]
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/auth/logout",
              "host": ["{{base_url}}"],
              "path": ["auth", "logout"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "User Management",
      "item": [
        {
          "name": "Get All Users (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/admin/users?page=1&limit=20&search=&status=",
              "host": ["{{base_url}}"],
              "path": ["admin", "users"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "20"
                },
                {
                  "key": "search",
                  "value": ""
                },
                {
                  "key": "status",
                  "value": ""
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Festive Boards",
      "item": [
        {
          "name": "Get All Festive Boards",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/admin/festive-board?page=1&limit=20&search=&year=2024",
              "host": ["{{base_url}}"],
              "path": ["admin", "festive-board"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "20"
                },
                {
                  "key": "search",
                  "value": ""
                },
                {
                  "key": "year",
                  "value": "2024"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Festive Board Details with Meals",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/admin/festive-board/{{festive_board_id}}",
              "host": ["{{base_url}}"],
              "path": ["admin", "festive-board", "{{festive_board_id}}", "meals"]
            }
          },
          "response": []
        },
        {
          "name": "Select Meal for Festive Board",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{access_token}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userId\": \"{{user_id}}\",\n  \"mealId\": \"{{meal_id}}\",\n  \"action\": \"select\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/admin/festive-board/{{festive_board_id}}/selections",
              "host": ["{{base_url}}"],
              "path": ["admin", "festive-board", "{{festive_board_id}}", "selections"]
            }
          },
          "response": []
        },
        {
          "name": "Add Meal and Select for User",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{access_token}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"festiveBoardId\": \"{{festive_board_id}}\",\n  \"title\": \"Meal Title\",\n  \"description\": \"Meal description\",\n  \"categoryId\": \"{{category_id}}\",\n  \"imageUrl\": \"https://example.com/image.jpg\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/festive-board/add-meal",
              "host": ["{{base_url}}"],
              "path": ["festive-board", "add-meal"]
            },
            "description": "Creates a new meal, adds it to the specified festive board, and automatically selects it for the authenticated user.\n\n**Required Fields:**\n- festiveBoardId: ID of the festive board\n- title: Meal title\n- categoryId: ID of the meal category\n\n**Optional Fields:**\n- description: Meal description\n- imageUrl: URL to meal image\n\n**Response:** Returns the created meal, festive board meal association, and user selection details."
          },
          "response": []
        },
        {
          "name": "Get User Meal Selections for Festive Board",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{access_token}}" }
            ],
            "url": {
              "raw": "{{base_url}}/festive-board/add-meal?festiveBoardId={{festive_board_id}}",
              "host": ["{{base_url}}"],
              "path": ["festive-board", "add-meal"],
              "query": [
                { "key": "festiveBoardId", "value": "{{festive_board_id}}" }
              ]
            },
            "description": "Retrieves all meal selections for the authenticated user in a specific festive board.\n\n**Query Parameters:**\n- festiveBoardId: ID of the festive board\n\n**Response:** Returns an array of meal selections with meal details, category information, and festive board details."
          },
          "response": []
        },
        {
          "name": "Deselect Meal for Festive Board",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{access_token}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userId\": \"{{user_id}}\",\n  \"mealId\": \"{{meal_id}}\",\n  \"action\": \"deselect\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/admin/festive-board/{{festive_board_id}}/selections",
              "host": ["{{base_url}}"],
              "path": ["admin", "festive-board", "{{festive_board_id}}", "selections"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Trestle Boards",
      "item": [
        {
          "name": "Get All Trestle Boards",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/admin/trestle-board?page=1&limit=20&search=&category=",
              "host": ["{{base_url}}"],
              "path": ["admin", "trestle-board"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "20"
                },
                {
                  "key": "search",
                  "value": ""
                },
                {
                  "key": "category",
                  "value": ""
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Signup for Trestle Board",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{access_token}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userId\": \"6870ec4831a6be82b4cccbe1\",\n  \"trestleBoardId\": \"6879216632a53988f8f45b04\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/admin/calendar",
              "host": ["{{base_url}}"],
              "path": ["admin", "calendar"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Calendar",
      "item": [
        {
          "name": "Get User Calendar (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/admin/calendar?startDate=2024-01-01&endDate=2024-12-31&eventType=&userId={{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["admin", "calendar"],
              "query": [
                {
                  "key": "startDate",
                  "value": "2024-01-01"
                },
                {
                  "key": "endDate",
                  "value": "2024-12-31"
                },
                {
                  "key": "eventType",
                  "value": ""
                },
                {
                  "key": "userId",
                  "value": "{{user_id}}"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get My Calendar Events",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/calendar?startDate=2024-01-01&endDate=2024-12-31&eventType=",
              "host": ["{{base_url}}"],
              "path": ["calendar"],
              "query": [
                {
                  "key": "startDate",
                  "value": "2024-01-01"
                },
                {
                  "key": "endDate",
                  "value": "2024-12-31"
                },
                {
                  "key": "eventType",
                  "value": ""
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Add Custom Event to My Calendar",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"My Custom Event\",\n  \"description\": \"Event description\",\n  \"startDate\": \"2024-12-25\",\n  \"startTime\": \"14:00\",\n  \"location\": \"Event Location\",\n  \"eventType\": \"CUSTOM\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/calendar",
              "host": ["{{base_url}}"],
              "path": ["calendar"]
            }
          },
          "response": []
        },
        {
          "name": "Get Calendar Event Details",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{access_token}}" }
            ],
            "url": {
              "raw": "{{base_url}}/calendar/{{event_id}}",
              "host": ["{{base_url}}"],
              "path": ["calendar", "{{event_id}}"]
            },
            "description": "Fetch details for a specific calendar event (trestle board or custom) belonging to the authenticated user. One of 'trestleBoard' or 'customEvent' is populated; the other is null."
          },
          "response": []
        }
      ]
    },
    {
      "name": "Notifications",
      "item": [
        {
          "name": "Get User Notifications",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/admin/notifications?page=1&limit=20&status=all&type=&search=",
              "host": ["{{base_url}}"],
              "path": ["admin", "notifications"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "20"
                },
                {
                  "key": "status",
                  "value": "all"
                },
                {
                  "key": "type",
                  "value": ""
                },
                {
                  "key": "search",
                  "value": ""
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Mark Notification as Read",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/admin/notifications/{{notification_id}}?action=read",
              "host": ["{{base_url}}"],
              "path": ["admin", "notifications", "{{notification_id}}"],
              "query": [
                {
                  "key": "action",
                  "value": "read"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Mark All Notifications as Read",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/admin/notifications?action=mark-all-read",
              "host": ["{{base_url}}"],
              "path": ["admin", "notifications"],
              "query": [
                {
                  "key": "action",
                  "value": "mark-all-read"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Archive Notification",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"isArchived\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/admin/notifications/{{notification_id}}",
              "host": ["{{base_url}}"],
              "path": ["admin", "notifications", "{{notification_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "Unarchive Notification",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"isArchived\": false\n}"
            },
            "url": {
              "raw": "{{base_url}}/admin/notifications/{{notification_id}}",
              "host": ["{{base_url}}"],
              "path": ["admin", "notifications", "{{notification_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "Delete Notification",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/admin/notifications/{{notification_id}}",
              "host": ["{{base_url}}"],
              "path": ["admin", "notifications", "{{notification_id}}"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Chat",
      "item": [
        {
          "name": "Get Chat Rooms",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/admin/chat/rooms",
              "host": ["{{base_url}}"],
              "path": ["admin", "chat", "rooms"]
            }
          },
          "response": []
        },
        {
          "name": "Create Chat Room",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{access_token}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"participantIds\": [\"{{user_id_1}}\", \"{{user_id_2}}\"],\n  \"isGroup\": false\n}"
            },
            "url": {
              "raw": "{{base_url}}/admin/chat/rooms",
              "host": ["{{base_url}}"],
              "path": ["admin", "chat", "rooms"]
            }
          },
          "response": []
        },
        {
          "name": "Start Direct Chat With User",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{access_token}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"participantIds\": [\"{{other_user_id}}\"],\n  \"isGroup\": false\n}"
            },
            "url": {
              "raw": "{{base_url}}/admin/chat/rooms",
              "host": ["{{base_url}}"],
              "path": ["admin", "chat", "rooms"]
            }
          },
          "description": "Start or retrieve a direct chat with a specific user. If a direct chat already exists between the current user and the provided user, the existing room is returned; otherwise a new room is created.",
          "response": []
        },
        {
          "name": "Send Chat Message",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{access_token}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"chatRoomId\": \"{{room_id}}\",\n  \"content\": \"Hello!\",\n  \"type\": \"TEXT\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/admin/chat/messages",
              "host": ["{{base_url}}"],
              "path": ["admin", "chat", "messages"]
            }
          },
          "response": []
        },
        {
          "name": "Get Chat Messages",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{access_token}}" }
            ],
            "url": {
              "raw": "{{base_url}}/admin/chat/rooms/{{room_id}}/messages?page=1&limit=30&sortOrder=asc",
              "host": ["{{base_url}}"],
              "path": ["admin", "chat", "rooms", "{{room_id}}", "messages"],
              "query": [
                { "key": "page", "value": "1" },
                { "key": "limit", "value": "30" },
                { "key": "sortOrder", "value": "asc" }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Support",
      "item": [
        {
          "name": "Get Support Requests",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/admin/support?page=1&limit=10&status=&priority=",
              "host": ["{{base_url}}"],
              "path": ["admin", "support"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "status",
                  "value": ""
                },
                {
                  "key": "priority",
                  "value": ""
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Post Support Request",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{access_token}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"subject\": \"Issue Title\",\n  \"message\": \"Describe your issue here.\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/admin/support",
              "host": ["{{base_url}}"],
              "path": ["admin", "support"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Documents",
      "item": [
        {
          "name": "Get Documents",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/admin/documents?page=1&limit=20&search=&category=&permissions=",
              "host": ["{{base_url}}"],
              "path": ["admin", "documents"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "20"
                },
                {
                  "key": "search",
                  "value": ""
                },
                {
                  "key": "category",
                  "value": ""
                },
                {
                  "key": "permissions",
                  "value": ""
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Phonebook",
      "item": [
        {
          "name": "Get Phonebook",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/admin/phonebook?page=1&limit=20&search=",
              "host": ["{{base_url}}"],
              "path": ["admin", "phonebook"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "20"
                },
                {
                  "key": "search",
                  "value": ""
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Dashboard",
      "item": [
        {
          "name": "Get Dashboard Stats",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/admin/dashboard",
              "host": ["{{base_url}}"],
              "path": ["admin", "dashboard"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Announcements",
      "item": [
        {
          "name": "Get Announcements",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/admin/announcements?page=1&limit=20&search=&type=&status=",
              "host": ["{{base_url}}"],
              "path": ["admin", "announcements"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "20"
                },
                {
                  "key": "search",
                  "value": ""
                },
                {
                  "key": "type",
                  "value": ""
                },
                {
                  "key": "status",
                  "value": ""
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Meal Categories",
      "item": [
        {
          "name": "Get All Meal Categories",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/admin/meal/categories?page=1&limit=20&search=",
              "host": ["{{base_url}}"],
              "path": ["admin", "meal", "categories"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "20"
                },
                {
                  "key": "search",
                  "value": ""
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Meal Category by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/admin/meal/categories/{{category_id}}",
              "host": ["{{base_url}}"],
              "path": ["admin", "meal", "categories", "{{category_id}}"]
            }
          },
          "response": []
        }
      ]
    }
    ,
    {
      "name": "Socket via REST",
      "description": "HTTP endpoints that mirror Socket.IO actions for mobile apps.",
      "item": [
        {
          "name": "Join User Room (REST)",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userId\": \"{{user_id}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/socket/join-user",
              "host": ["{{base_url}}"],
              "path": ["socket", "join-user"]
            }
          },
          "response": []
        },
        {
          "name": "Join Chat Room (REST)",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"chatRoomId\": \"{{chat_room_id}}\",\n  \"userId\": \"{{user_id}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/socket/join-chat",
              "host": ["{{base_url}}"],
              "path": ["socket", "join-chat"]
            }
          },
          "response": []
        },
        {
          "name": "Leave Chat Room (REST)",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"chatRoomId\": \"{{chat_room_id}}\",\n  \"userId\": \"{{user_id}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/socket/leave-chat",
              "host": ["{{base_url}}"],
              "path": ["socket", "leave-chat"]
            }
          },
          "response": []
        },
        {
          "name": "Typing Start (REST)",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"chatRoomId\": \"{{chat_room_id}}\",\n  \"userId\": \"{{user_id}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/socket/typing-start",
              "host": ["{{base_url}}"],
              "path": ["socket", "typing-start"]
            }
          },
          "response": []
        },
        {
          "name": "Typing Stop (REST)",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"chatRoomId\": \"{{chat_room_id}}\",\n  \"userId\": \"{{user_id}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/socket/typing-stop",
              "host": ["{{base_url}}"],
              "path": ["socket", "typing-stop"]
            }
          },
          "response": []
        },
        {
          "name": "Mark Message Read (REST)",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"chatRoomId\": \"{{chat_room_id}}\",\n  \"messageId\": \"{{message_id}}\",\n  \"userId\": \"{{user_id}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/socket/mark-read",
              "host": ["{{base_url}}"],
              "path": ["socket", "mark-read"]
            }
          },
          "response": []
        },
        {
          "name": "Send Test Event (REST)",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"room\": \"chat-{{chat_room_id}}\",\n  \"data\": { \"hello\": \"world\" }\n}"
            },
            "url": {
              "raw": "{{base_url}}/socket/test-event",
              "host": ["{{base_url}}"],
              "path": ["socket", "test-event"]
            }
          },
          "response": []
        },
        {
          "name": "Send Notification (REST)",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userId\": \"{{user_id}}\",\n  \"notification\": {\n    \"title\": \"Test\",\n    \"message\": \"Hello from REST\"\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/socket/notify",
              "host": ["{{base_url}}"],
              "path": ["socket", "notify"]
            }
          },
          "response": []
        },
        {
          "name": "Emit User Created (REST)",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userId\": \"{{user_id}}\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"email\": \"john@example.com\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/socket/user-created",
              "host": ["{{base_url}}"],
              "path": ["socket", "user-created"]
            }
          },
          "response": []
        },
        {
          "name": "Emit Meal Selection (REST)",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"festiveBoardId\": \"{{festive_board_id}}\",\n  \"festiveBoardTitle\": \"Title\",\n  \"mealData\": {}\n}"
            },
            "url": {
              "raw": "{{base_url}}/socket/meal-selection",
              "host": ["{{base_url}}"],
              "path": ["socket", "meal-selection"]
            }
          },
          "response": []
        },
        {
          "name": "Emit Trestle Board Added (REST)",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": \"{{trestle_board_id}}\",\n  \"title\": \"New Trestle Board\",\n  \"description\": \"Description\",\n  \"date\": \"2024-01-01T00:00:00.000Z\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/socket/trestle-board-added",
              "host": ["{{base_url}}"],
              "path": ["socket", "trestle-board-added"]
            }
          },
          "response": []
        }
      ]
    }
  ]
}